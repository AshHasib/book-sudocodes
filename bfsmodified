procedure BFSmodified(G,source):
  Q ← queue()
  distance[] ← infinity
  Q.enqueue(source)
  distance[source] ← 0
  while Q is not empty
    u ← Q.pop()
      for all edges from u to v in G.adjacentEdges(v) do
        if distance[u] + cost[u][v] < distance[v] 
          distance[u] ← distance[v] + 1
          Q.enqueue(v)
        end if
      end for
  end while
  Return distance
